import * as ts from "typescript";

export function generateFileMapLoader(): ts.MethodDeclaration {
    return ts.factory.createMethodDeclaration(
        [
            ts.factory.createToken(ts.SyntaxKind.PrivateKeyword),
            ts.factory.createToken(ts.SyntaxKind.AsyncKeyword)
        ],
        undefined,
        ts.factory.createIdentifier("loadFileMap"),
        undefined,
        undefined,
        [ts.factory.createParameterDeclaration(
            undefined,
            undefined,
            ts.factory.createIdentifier("p"),
            undefined,
            ts.factory.createKeywordTypeNode(ts.SyntaxKind.StringKeyword),
            undefined
        )],
        ts.factory.createTypeReferenceNode(
            ts.factory.createIdentifier("Promise"),
            [ts.factory.createKeywordTypeNode(ts.SyntaxKind.AnyKeyword)]
        ),
        ts.factory.createBlock(
            [
                ts.factory.createReturnStatement(ts.factory.createNewExpression(
                    ts.factory.createIdentifier("Promise"),
                    undefined,
                    [ts.factory.createArrowFunction(
                        undefined,
                        undefined,
                        [ts.factory.createParameterDeclaration(
                            undefined,
                            undefined,
                            ts.factory.createIdentifier("resolve"),
                            undefined,
                            undefined,
                            undefined
                        )],
                        undefined,
                        ts.factory.createToken(ts.SyntaxKind.EqualsGreaterThanToken),
                        ts.factory.createBlock(
                            [
                                ts.factory.createVariableStatement(
                                    undefined,
                                    ts.factory.createVariableDeclarationList(
                                        [ts.factory.createVariableDeclaration(
                                            ts.factory.createIdentifier("xhr"),
                                            undefined,
                                            undefined,
                                            ts.factory.createNewExpression(
                                                ts.factory.createIdentifier("XMLHttpRequest"),
                                                undefined,
                                                []
                                            )
                                        )],
                                        ts.NodeFlags.Let
                                    )
                                ),
                                ts.factory.createExpressionStatement(ts.factory.createBinaryExpression(
                                    ts.factory.createPropertyAccessExpression(
                                        ts.factory.createIdentifier("xhr"),
                                        ts.factory.createIdentifier("onreadystatechange")
                                    ),
                                    ts.factory.createToken(ts.SyntaxKind.EqualsToken),
                                    ts.factory.createArrowFunction(
                                        undefined,
                                        undefined,
                                        [],
                                        undefined,
                                        ts.factory.createToken(ts.SyntaxKind.EqualsGreaterThanToken),
                                        ts.factory.createBlock(
                                            [ts.factory.createIfStatement(
                                                ts.factory.createBinaryExpression(
                                                    ts.factory.createBinaryExpression(
                                                        ts.factory.createPropertyAccessExpression(
                                                            ts.factory.createIdentifier("xhr"),
                                                            ts.factory.createIdentifier("readyState")
                                                        ),
                                                        ts.factory.createToken(ts.SyntaxKind.EqualsEqualsToken),
                                                        ts.factory.createNumericLiteral("4")
                                                    ),
                                                    ts.factory.createToken(ts.SyntaxKind.AmpersandAmpersandToken),
                                                    ts.factory.createBinaryExpression(
                                                        ts.factory.createPropertyAccessExpression(
                                                            ts.factory.createIdentifier("xhr"),
                                                            ts.factory.createIdentifier("status")
                                                        ),
                                                        ts.factory.createToken(ts.SyntaxKind.EqualsEqualsToken),
                                                        ts.factory.createNumericLiteral("200")
                                                    )
                                                ),
                                                ts.factory.createBlock(
                                                    [ts.factory.createExpressionStatement(ts.factory.createCallExpression(
                                                        ts.factory.createIdentifier("resolve"),
                                                        undefined,
                                                        [ts.factory.createCallExpression(
                                                            ts.factory.createPropertyAccessExpression(
                                                                ts.factory.createIdentifier("JSON"),
                                                                ts.factory.createIdentifier("parse")
                                                            ),
                                                            undefined,
                                                            [ts.factory.createPropertyAccessExpression(
                                                                ts.factory.createIdentifier("xhr"),
                                                                ts.factory.createIdentifier("responseText")
                                                            )]
                                                        )]
                                                    ))],
                                                    true
                                                ),
                                                undefined
                                            )],
                                            true
                                        )
                                    )
                                )),
                                ts.factory.createExpressionStatement(ts.factory.createCallExpression(
                                    ts.factory.createPropertyAccessExpression(
                                        ts.factory.createIdentifier("xhr"),
                                        ts.factory.createIdentifier("open")
                                    ),
                                    undefined,
                                    [
                                        ts.factory.createStringLiteral("GET"),
                                        ts.factory.createIdentifier("p"),
                                        ts.factory.createTrue()
                                    ]
                                )),
                                ts.factory.createExpressionStatement(ts.factory.createCallExpression(
                                    ts.factory.createPropertyAccessExpression(
                                        ts.factory.createIdentifier("xhr"),
                                        ts.factory.createIdentifier("send")
                                    ),
                                    undefined,
                                    []
                                ))
                            ],
                            true
                        )
                    )]
                ))
            ],
            true
        )
    );
}